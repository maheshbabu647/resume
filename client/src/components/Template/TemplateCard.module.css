/* src/components/Template/TemplateCard.module.css */

.card {
  background-color: var(--surface-color);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--box-shadow-sm);
  overflow: hidden; /* Important: clips anything outside the border-radius */
  display: flex;
  flex-direction: column; /* Key for stacking image container and content */
  border: 1px solid var(--border-color);
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  /* Remove fixed height or ensure it's enough.
     Let's allow it to size by content, or ensure grid gives it enough space.
     If your grid defines row heights, this card will try to fill it. */
  /* height: 100%; */ /* This is good if the parent grid cell controls height */
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: var(--box-shadow);
}

.imageContainer {
  width: 100%;
  /* Let's try a common aspect ratio for previews like 4:3 or 3:4.
     If your images are, for example, taller (like a document), use a taller ratio.
     Using aspect-ratio is more modern. Fallback to padding-top trick if needed for older browsers.
  */
  aspect-ratio: 3 / 4; /* Example: 3 units wide, 4 units tall. Adjust to your image shapes. */
  /* If aspect-ratio isn't supported or you prefer fixed height: */
  /* height: 320px; */ /* Adjust this fixed height based on your images */
  background-color: var(--light-color); /* Fallback background */
  overflow: hidden; /* Ensures image doesn't spill if it's larger than container */
  position: relative; /* Needed if you ever want to position elements absolutely within it */
}

.templateImage {
  width: 100%;
  height: 100%;
  /* 'cover' will fill the space, potentially cropping.
     'contain' will show the whole image, potentially with letterboxing.
     If "not seeing the complete image" means it's too cropped, 'contain' might be an option,
     but 'cover' usually looks better if the aspect ratio is reasonably close. */
  object-fit: cover;
  display: block; /* Removes extra space under image */
  background-color: var(--secondary-color); /* Fallback for broken images */
}

.cardContent {
  padding: var(--spacing-md);
  display: flex;
  flex-direction: column; /* Stacks name and button link */
  flex-grow: 1; /* CRITICAL: Allows this section to take available vertical space */
  justify-content: space-between; /* Pushes name to top, button link to bottom */
}

.templateName {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text-color-primary);
  margin-top: 0;
  margin-bottom: var(--spacing-sm);
  line-height: 1.4;
  /* Truncate to 2 lines with ellipsis */
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  /* min-height: calc(2 * 1.4em); */ /* Removing min-height to let flexbox handle spacing */
}

.useButtonLink {
  text-decoration: none;
  display: block; /* Make the link a block to contain the button properly */
  /* margin-top: auto; /* This was one way, but justify-content on parent is better */
}

.useButton {
  width: 100%;
  /* margin-top: var(--spacing-sm); */ /* Button might not need top margin if link is pushed by justify-content */
}

/* Responsive adjustments for smaller screens */
@media (max-width: 576px) {
  .templateName {
    font-size: 1rem;
  }
  .imageContainer {
    /* Adjust aspect ratio or height for mobile if needed */
    /* aspect-ratio: 4 / 5; */ /* Example: slightly squarer on mobile */
    /* height: 280px; */
  }
  .cardContent {
    padding: var(--spacing-sm);
  }
}

